{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAUA,IAAIC,EAAU,EACVC,EAAY,GAGhB,MAAMC,EAAK,CACPC,KAAMC,SAASC,cAAc,gBAC7BC,MAAOF,SAASC,cAAc,iBAC9BE,IAAKH,SAASC,cAAc,YAC5BG,YAAaJ,SAASC,cAAc,eAKxC,IAAII,EAAU,IAAIC,EAAAC,GAAJ,CAAmB,cAEjCT,EAAKM,YAAYI,QAAO,EAExBV,EAAKC,KAAKU,iBAAiB,UAc3B,SAAsBC,GAClBA,EAAMC,iBACNb,EAAKM,YAAYI,QAAO,EAExBZ,EAAU,EACVE,EAAKK,IAAIS,UAAU,GAEnB,MAAMb,EAAOW,EAAMG,cACnBhB,EAAcE,EAAKe,SAASC,YAAYC,MAAMC,OAE7B,KAAdpB,EACDqB,IACCC,KAAKC,GACLC,OAAMC,GAAKC,EAAAC,OAAOC,QAAQ,kCAG3BF,EAAAC,OAAOC,QAAQ,qB,IA7BrB3B,EAAKM,YAAYK,iBAAiB,SAiHlC,WACIb,GAAW,EACXsB,IACCC,KAAKC,GACLC,OAAMC,GAAKC,EAAAC,OAAOC,QAAQ,iC,IAlH/B,MAAQC,OAAQC,GAAe3B,SAC5BC,cAAc,YACd2B,kBAAkBC,wBA6BrBC,eAAeZ,IACX,MAAMa,EAAS,IAAIC,gBAAgB,CAC/BC,IAvDQ,qCAwDRC,EAAGrC,EACHsC,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,SAzDO,GA0DPC,KAAM3C,IAIV,aAAaF,EAAA8C,QAAMC,IAAI,4BAAeV,I,CAM1C,SAASX,EAAmBsB,GAIxB,GAHAC,QAAQC,IAAI,gBAAiBF,GAC7BC,QAAQC,IAAI,sBAAsBF,EAAcG,KAAKC,MAEhB,IAAjCJ,EAAcG,KAAKC,KAAKC,OACxBxB,EAAAC,OAAOC,QAAQ,gFAEf,CACA,MAAMuB,GAoBoBC,EApBYP,EAAcG,KAAKC,KAqB7DH,QAAQC,IAAI,OAAQK,GAEbA,EAAIC,KAAI,EAACC,cAACA,EAAaC,aAAEA,EAAYC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KACxE,wFAGWN,8EAC4BC,0MAM3BG,0GAIAD,6GAIAE,8GAIAC,2DAGLC,KAAK,KA5CZ,GAJA5D,EAAKK,IAAIwD,mBAAmB,YAAaX,GACzC3C,EAAQuD,UACRjB,QAAQC,IAAI,+BAAgCF,EAAcG,KAAKgB,UAAW,KAAMnB,EAAcG,KAAKgB,UA/E5F,IAgFPlB,QAAQC,IAAI,aAAchD,GACvBA,EAAU,EAAE,CACX,MAAMkE,EAlFH,GAkFclE,EACjB2B,EAAAC,OAAOuC,KAAK,oBAAoBD,Y,CAGjClE,EAAU8C,EAAcG,KAAKgB,UAtFzB,GAuFH/D,EAAKM,YAAYI,QAAS,GAE1BV,EAAKM,YAAYI,QAAS,EAC1Be,EAAAC,OAAOuC,KAAK,8D,CAMxB,IAAkCd,C,CAzElCe,OAAOC,SAAS,CACdC,IAAkB,EAAbvC,EACLwC,SAAU","sources":["src/buttonLoadMore.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// Описаний в документації\nimport SimpleLightbox from \"simplelightbox\";\n// Додатковий імпорт стилів\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"35857316-b0404474f9c8f0cfe824c51d8\";\nlet countPage=1;\nlet searchQuery=\"\";\nlet queryLimit=40;\n\nconst refs={\n    form: document.querySelector('#search-form'),\n    input: document.querySelector('.search-input'),\n    div: document.querySelector(\".gallery\"),\n    loadMoreBtn: document.querySelector('.load-more'),\n    \n}\n\n\nlet gallery = new SimpleLightbox('.gallery a');\n\nrefs.loadMoreBtn.hidden=true;\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.loadMoreBtn.addEventListener('click', onClickLoadMore)\n\n// плавне прокручування сторінки після запиту і відтворення кожної наступної групи зображень\nconst { height: cardHeight } = document\n  .querySelector(\".gallery\")\n  .firstElementChild.getBoundingClientRect();\n\nwindow.scrollBy({\n  top: cardHeight * 2,\n  behavior: \"smooth\",\n});\n/////////////////////////////////////////////////////////////////////////////////////////\n\nfunction onFormSubmit(event){\n    event.preventDefault();\n    refs.loadMoreBtn.hidden=true;\n\n    countPage=1;\n    refs.div.innerHTML=\"\";\n\n    const form = event.currentTarget;\n    searchQuery = form.elements.searchQuery.value.trim();\n    \n    if(searchQuery!==\"\"){\n      fetchQuery()\n      .then(checkQueryResponse)\n      .catch(err=>Notify.failure('Ooops! Something went wrong!'));\n    }\n    else{\n      Notify.failure('Empty search input');\n    }\n  \n}\n\nasync function fetchQuery(){\n    const params = new URLSearchParams({\n        key: API_KEY,\n        q: searchQuery,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        per_page: queryLimit,\n        page: countPage,\n\n    });\n\n    return await axios.get(`${BASE_URL}?${params}`);\n    \n    // return await axios.get(`${BASE_URL}?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&safesearch=true`);\n    \n}\n\nfunction checkQueryResponse(queryResponse){\n    console.log(\"queryResponse\", queryResponse);\n    console.log(\"queryResponse.hits=\",queryResponse.data.hits);\n\n    if (queryResponse.data.hits.length===0){\n        Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n    }\n    else{\n        const markup=createImageGalleryMarkup(queryResponse.data.hits);\n        refs.div.insertAdjacentHTML('beforeend', markup);\n        gallery.refresh();\n        console.log(\"queryResponse.data.totalHits\", queryResponse.data.totalHits, \"  \", queryResponse.data.totalHits/queryLimit)\n        console.log(\"countPage=\", countPage);\n        if(countPage>1){\n            const countImage=countPage*queryLimit;\n            Notify.info(`Hooray! We found ${countImage} images.`);\n        }\n\n        if(countPage<queryResponse.data.totalHits/queryLimit){\n            refs.loadMoreBtn.hidden = false;\n        }else{\n            refs.loadMoreBtn.hidden = true;\n            Notify.info(\"We're sorry, but you've reached the end of search results.\");\n        }\n       \n    }\n}\n\nfunction createImageGalleryMarkup(arr){\n    console.log(\"arr=\", arr);\n\n    return arr.map(({largeImageURL, webformatURL, tags, views, likes, comments, downloads})=>\n        `<div class=\"photo-card\">\n       \n        <div class=\"img-thumb\">\n        <a href=\"${largeImageURL}\" class=\"photo-card__link\">\n        <img class=\"photo-card__image\"\" src=\"${webformatURL}\" alt=\"{tags}\" loading=\"lazy\" data-source=\"large-image.jpg\"/>\n        </a>\n        </div>\n        <div class=\"info\">\n          <p class=\"info-item\">\n            <b>Likes</b>\n            <span>${likes}</span>\n          </p>\n          <p class=\"info-item\">\n            <b>Views</b>\n            <span>${views}</span>\n          </p>\n          <p class=\"info-item\">\n            <b>Comments</b>\n            <span>${comments}</span>\n          </p>\n          <p class=\"info-item\">\n            <b>Downloads</b>\n            <span>${downloads}</span>\n          </p>\n        </div>\n      </div>`).join('');\n    \n}\n\nfunction onClickLoadMore(){\n    countPage+=1;\n    fetchQuery()\n    .then(checkQueryResponse)\n    .catch(err=>Notify.failure('Ooops! Something went wrong!'));\n\n}"],"names":["$2shzp","parcelRequire","$8f8455376aa3aa25$var$countPage","$8f8455376aa3aa25$var$searchQuery","$8f8455376aa3aa25$var$refs","form","document","querySelector","input","div","loadMoreBtn","$8f8455376aa3aa25$var$gallery","$parcel$interopDefault","$fZKcF","hidden","addEventListener","event","preventDefault","innerHTML","currentTarget","elements","searchQuery","value","trim","$8f8455376aa3aa25$var$fetchQuery","then","$8f8455376aa3aa25$var$checkQueryResponse","catch","err","$iQIUW","Notify","failure","height","$8f8455376aa3aa25$var$cardHeight","firstElementChild","getBoundingClientRect","async","params","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","page","default","get","queryResponse","console","log","data","hits","length","markup","arr","map","largeImageURL","webformatURL","tags","views","likes","comments","downloads","join","insertAdjacentHTML","refresh","totalHits","countImage","info","window","scrollBy","top","behavior"],"version":3,"file":"butLoadMore.f90731d2.js.map"}