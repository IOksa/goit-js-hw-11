{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAUA,IAAIC,EAAU,EACVC,EAAY,GAGhB,MAAMC,EAAK,CACPC,KAAMC,SAASC,cAAc,gBAC7BC,MAAOF,SAASC,cAAc,iBAC9BE,IAAKH,SAASC,cAAc,YAC5BG,YAAaJ,SAASC,cAAc,eAKxC,IAAII,EAAU,IAAIC,EAAAC,GAAJ,CAAmB,cA4BjCC,eAAeC,IACX,MAAMC,EAAS,IAAIC,gBAAgB,CAC/BC,IA5CQ,qCA6CRC,EAAGhB,EACHiB,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,SA9CO,GA+CPC,KAAMtB,IAIV,aAAaF,EAAAyB,QAAMC,IAAI,4BAAeV,I,CAM1C,SAASW,EAAmBC,GAExB,GAAqC,IAAjCA,EAAcC,KAAKC,KAAKC,OACxBC,EAAAC,OAAOC,QAAQ,gFAEf,CACA,MAAMC,EAAgCP,EAAcC,KAAKC,KA6BjDM,KAAI,EAACC,cAACA,EAAaC,aAAEA,EAAYC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KACzE,wFAGWN,8EAC4BC,0MAM3BG,0GAIAD,6GAIAE,8GAIAC,2DAGLC,KAAK,IAnDZ,GAHAxC,EAAKK,IAAIoC,mBAAmB,YAAaV,GACzCxB,EAAQmC,UAEL5C,EAAU,EAAE,CAEb,MAAQ6C,OAAQC,GAAe1C,SAC9BC,cAAc,YACd0C,kBAAkBC,wBAEnBC,OAAOC,SAAS,CAChBC,IAAkB,EAAbL,EAAe,GACpBM,SAAU,WAGR,MAAMC,EA9EH,GA8EcrD,EACjB8B,EAAAC,OAAOuB,KAAK,oBAAoBD,Y,CAGjCrD,EAAU0B,EAAcC,KAAK4B,UAlFzB,GAmFHrD,EAAKM,YAAYgD,QAAS,GAE1BtD,EAAKM,YAAYgD,QAAS,EAC1B1B,EAAAC,OAAOuB,KAAK,8D,EAzExBpD,EAAKM,YAAYgD,QAAO,EAExBtD,EAAKC,KAAKsD,iBAAiB,UAG3B,SAAsBC,GAClBA,EAAMC,iBACNzD,EAAKM,YAAYgD,QAAO,EAExBxD,EAAU,EACVE,EAAKK,IAAIqD,UAAU,GAEnB,MAAMzD,EAAOuD,EAAMG,cACnB5D,EAAcE,EAAK2D,SAASC,YAAYC,MAAMC,OAE7B,KAAdhE,EACDY,IACCqD,KAAKzC,GACL0C,OAAMC,GAAKtC,EAAAC,OAAOC,QAAQ,kCAG3BF,EAAAC,OAAOC,QAAQ,qB,IAlBrB9B,EAAKM,YAAYiD,iBAAiB,SAyGlC,WACIzD,GAAW,EACXa,IACCqD,KAAKzC,GACL0C,OAAMC,GAAKtC,EAAAC,OAAOC,QAAQ,iC","sources":["src/buttonLoadMore.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// Описаний в документації\nimport SimpleLightbox from \"simplelightbox\";\n// Додатковий імпорт стилів\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"35857316-b0404474f9c8f0cfe824c51d8\";\nlet countPage=1;\nlet searchQuery=\"\";\nlet queryLimit=40;\n\nconst refs={\n    form: document.querySelector('#search-form'),\n    input: document.querySelector('.search-input'),\n    div: document.querySelector(\".gallery\"),\n    loadMoreBtn: document.querySelector('.load-more'),\n    \n}\n\n\nlet gallery = new SimpleLightbox('.gallery a');\n\nrefs.loadMoreBtn.hidden=true;\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.loadMoreBtn.addEventListener('click', onClickLoadMore)\n\nfunction onFormSubmit(event){\n    event.preventDefault();\n    refs.loadMoreBtn.hidden=true;\n\n    countPage=1;\n    refs.div.innerHTML=\"\";\n\n    const form = event.currentTarget;\n    searchQuery = form.elements.searchQuery.value.trim();\n    \n    if(searchQuery!==\"\"){\n      fetchQuery()\n      .then(checkQueryResponse)\n      .catch(err=>Notify.failure('Ooops! Something went wrong!'));\n    }\n    else{\n      Notify.failure('Empty search input');\n    }\n  \n}\n\nasync function fetchQuery(){\n    const params = new URLSearchParams({\n        key: API_KEY,\n        q: searchQuery,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        per_page: queryLimit,\n        page: countPage,\n\n    });\n\n    return await axios.get(`${BASE_URL}?${params}`);\n    \n    // return await axios.get(`${BASE_URL}?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&safesearch=true`);\n    \n}\n\nfunction checkQueryResponse(queryResponse){\n    \n    if (queryResponse.data.hits.length===0){\n        Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n    }\n    else{\n        const markup=createImageGalleryMarkup(queryResponse.data.hits);\n        refs.div.insertAdjacentHTML('beforeend', markup);\n        gallery.refresh();\n        \n        if(countPage>1){\n// плавне прокручування сторінки після запиту і відтворення кожної наступної групи зображень\n          const { height: cardHeight } = document\n          .querySelector(\".gallery\")\n          .firstElementChild.getBoundingClientRect();\n\n          window.scrollBy({\n          top: cardHeight * 2-70,\n          behavior: \"smooth\",\n          });\n//////////////////////////////////////////////////////////////////////////////\n            const countImage=countPage*queryLimit;\n            Notify.info(`Hooray! We found ${countImage} images.`);\n        }\n\n        if(countPage<queryResponse.data.totalHits/queryLimit){\n            refs.loadMoreBtn.hidden = false;\n        }else{\n            refs.loadMoreBtn.hidden = true;\n            Notify.info(\"We're sorry, but you've reached the end of search results.\");\n        }\n    }\n}\n\nfunction createImageGalleryMarkup(arr){\n     return arr.map(({largeImageURL, webformatURL, tags, views, likes, comments, downloads})=>\n        `<div class=\"photo-card\">\n       \n        <div class=\"img-thumb\">\n        <a href=\"${largeImageURL}\" class=\"photo-card__link\">\n        <img class=\"photo-card__image\"\" src=\"${webformatURL}\" alt=\"{tags}\" loading=\"lazy\" data-source=\"large-image.jpg\"/>\n        </a>\n        </div>\n        <div class=\"info\">\n          <p class=\"info-item\">\n            <b>Likes</b>\n            <span>${likes}</span>\n          </p>\n          <p class=\"info-item\">\n            <b>Views</b>\n            <span>${views}</span>\n          </p>\n          <p class=\"info-item\">\n            <b>Comments</b>\n            <span>${comments}</span>\n          </p>\n          <p class=\"info-item\">\n            <b>Downloads</b>\n            <span>${downloads}</span>\n          </p>\n        </div>\n      </div>`).join('');\n}\n\nfunction onClickLoadMore(){\n    countPage+=1;\n    fetchQuery()\n    .then(checkQueryResponse)\n    .catch(err=>Notify.failure('Ooops! Something went wrong!'));\n\n}"],"names":["$2shzp","parcelRequire","$8f8455376aa3aa25$var$countPage","$8f8455376aa3aa25$var$searchQuery","$8f8455376aa3aa25$var$refs","form","document","querySelector","input","div","loadMoreBtn","$8f8455376aa3aa25$var$gallery","$parcel$interopDefault","$fZKcF","async","$8f8455376aa3aa25$var$fetchQuery","params","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","page","default","get","$8f8455376aa3aa25$var$checkQueryResponse","queryResponse","data","hits","length","$iQIUW","Notify","failure","markup","map","largeImageURL","webformatURL","tags","views","likes","comments","downloads","join","insertAdjacentHTML","refresh","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","countImage","info","totalHits","hidden","addEventListener","event","preventDefault","innerHTML","currentTarget","elements","searchQuery","value","trim","then","catch","err"],"version":3,"file":"butLoadMore.e77dd8af.js.map"}